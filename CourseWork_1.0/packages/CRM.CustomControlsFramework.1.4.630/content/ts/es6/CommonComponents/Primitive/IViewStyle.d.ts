import { IFlexboxStyle } from "./IFlexboxStyle";
import { IFlexboxItemStyle } from "./IFlexboxItemStyle";
import { IFlexboxContainerStyle } from "./IFlexboxContainerStyle";
import { ICSSPseudoClasses } from "./ICSSPseudoClasses";
import { BorderBottomProperty, BorderLeftProperty, BorderProperty, BorderRightProperty, BorderTopProperty, BoxSizingProperty, DisplayProperty, FloatProperty, GlobalsNumber, OutlineProperty, OverflowProperty, OverflowXProperty, OverflowYProperty, PointerEventsProperty, ResizeProperty, TransformOriginProperty, VerticalAlignProperty, VisibilityProperty, WhiteSpaceProperty, ZIndexProperty } from "csstype";
interface IViewStyle extends IFlexboxStyle, IFlexboxItemStyle, IFlexboxContainerStyle, ICSSPseudoClasses {
    backgroundColor?: string;
    borderColor?: string;
    borderBottomColor?: string;
    borderLeftColor?: string;
    borderRightColor?: string;
    borderTopColor?: string;
    borderRadius?: number | string;
    borderBottomLeftRadius?: number | string;
    borderBottomRightRadius?: number | string;
    borderTopLeftRadius?: number | string;
    borderTopRightRadius?: number | string;
    borderStyle?: "solid" | "dotted" | "dashed" | "none" | string;
    boxShadow?: string;
    boxSizing?: BoxSizingProperty;
    opacity?: GlobalsNumber;
    overflow?: OverflowProperty;
    overflowX?: OverflowXProperty;
    overflowY?: OverflowYProperty;
    zIndex?: ZIndexProperty;
    float?: FloatProperty;
    flexGrow?: GlobalsNumber;
    flexShrink?: GlobalsNumber;
    lineHeight?: string | number;
    color?: string;
    transform?: string;
    transformOrigin?: TransformOriginProperty<string | number>;
    verticalAlign?: VerticalAlignProperty<string | number>;
    whiteSpace?: WhiteSpaceProperty;
    horizontalAlign?: string;
    textOverflow?: "clip" | "ellipsis" | string | "initial" | "inherit";
    display?: DisplayProperty;
    pointerEvents?: PointerEventsProperty;
    transition?: string;
    transitionDelay?: string;
    transitionDuration?: string;
    transitionProperty?: "none" | "all" | string;
    transitionTimingFunction?: "ease" | "ease-in" | "ease-out" | "ease-in-out" | "linear" | "step-start" | "step-end" | string;
    bottom?: number | string;
    left?: number | string;
    right?: number | string;
    top?: number | string;
    border?: BorderProperty<string | number>;
    borderTop?: BorderTopProperty<string | number>;
    borderBottom?: BorderBottomProperty<string | number>;
    borderRight?: BorderRightProperty<string | number>;
    borderLeft?: BorderLeftProperty<string | number>;
}
interface IViewHtmlStyle {
    cursor?: "pointer" | string;
    outline?: OutlineProperty<string | number>;
    color?: string;
    resize?: ResizeProperty;
    visibility?: VisibilityProperty;
}
export { IViewHtmlStyle, IViewStyle };
